{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/GeoChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\"; // import useResizeObserver from \"./useResizeObserver\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GeoChart({\n  data,\n  property\n}) {\n  _s();\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    style: {\n      marginBottom: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoChart, \"6bFCyBd3HKwDD6FYD4wxcBmp2CY=\", true);\n\n_c = GeoChart;\nexport default GeoChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoChart\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/GeoChart.js"],"names":["React","useEffect","useRef","GeoChart","data","property","svgRef","wrapperRef","dimensions","useResizeObserver","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAwC,OAAxC,C,CACA;;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAlB,EAAkC;AAAA;;AAG9B,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAMK,UAAU,GAAGL,MAAM,EAAzB;AACA,QAAMM,UAAU,GAAGC,iBAAiB,CAACF,UAAD,CAApC;AAEAN,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,CAAT;AAKA,sBACI;AAAK,IAAA,GAAG,EAAEM,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,YAAY,EAAE;AAAhB,KAA7B;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEJ;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAlBQH,Q;;KAAAA,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import React,{ useEffect, useRef } from \"react\";\n// import useResizeObserver from \"./useResizeObserver\";\n\nfunction GeoChart({data,property}){\n    \n    \n    const svgRef = useRef();\n    const wrapperRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef);\n\n    useEffect(()=>{\n\n    })\n\n\n    return (\n        <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n          <svg ref={svgRef}></svg>\n        </div>\n      );\n\n}\n\n\nexport default GeoChart;"]},"metadata":{},"sourceType":"module"}