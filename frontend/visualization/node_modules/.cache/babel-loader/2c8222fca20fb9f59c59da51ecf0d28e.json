{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BarChart({\n  csvdata\n}) {\n  _s();\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n\n  const clearBoard = () => {\n    const accessToRef = d3.select(svgRef.current);\n    accessToRef.selectAll(\"svg > *\").remove();\n  };\n\n  const horizontal = data => {\n    // D3 code here\n    var margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 90\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(svgRef.current).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Add X axis\n\n    var x = d3.scaleLinear().domain([0, d3.max(data, d => d.expectancy)]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\").attr('fill', 'blue'); // Y axis\n\n    var y = d3.scaleBand().range([0, height]).domain(data.map(function (d) {\n      return d.country;\n    })).padding(.1);\n    svg.append(\"g\").call(d3.axisLeft(y)).selectAll(\"text\").attr('fill', 'blue'); //Bars\n\n    svg.selectAll(\"myRect\").data(data).enter().append(\"rect\").attr(\"x\", x(0)).attr(\"y\", function (d) {\n      return y(d.country);\n    }).attr(\"width\", function (d) {\n      return x(d.expectancy);\n    }).attr(\"height\", y.bandwidth()) // .attr(\"fill\", \"#69b3a2\")\n    .attr(\"fill\", \"coral\");\n  };\n\n  useEffect(() => {\n    console.log(\"here\");\n    clearBoard();\n    let data = [];\n\n    for (var i = 0; i < csvdata.country.length; i++) {\n      let obj = {};\n      obj.country = csvdata.country[i];\n      obj.expectancy = csvdata.expectancy[i];\n      data.push(obj);\n    }\n\n    horizontal(data); // draw(data);\n  }, [csvdata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      style: {\n        width: \"500px\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BarChart, \"wHGsJvYloKVvWo8EGgYwue3juQs=\");\n\n_c = BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/BarChart.js"],"names":["React","useEffect","useRef","d3","BarChart","csvdata","svgRef","wrapperRef","clearBoard","accessToRef","select","current","selectAll","remove","horizontal","data","margin","top","right","bottom","left","width","height","svg","attr","append","x","scaleLinear","domain","max","d","expectancy","range","call","axisBottom","style","y","scaleBand","map","country","padding","axisLeft","enter","bandwidth","console","log","i","length","obj","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from \"d3\";\n\nexport function BarChart({csvdata}){\n\n    const svgRef = useRef();\n    const wrapperRef = useRef();\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(svgRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const horizontal = (data) => {\n\n       \n        \n        // D3 code here\n        var margin = {top: 20, right: 30, bottom: 40, left: 90},\n            width = 460 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(svgRef.current)\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // Add X axis\n        var x = d3.scaleLinear()\n        .domain([0, d3.max(data, (d) => d.expectancy)])\n        .range([ 0, width]);\n        \n        svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n            .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n            .style(\"text-anchor\", \"end\")\n            .attr('fill','blue');\n\n        // Y axis\n        var y = d3.scaleBand()\n        .range([ 0, height ])\n        .domain(data.map(function(d) { return d.country; }))\n        .padding(.1);\n        \n        svg.append(\"g\")\n        .call(d3.axisLeft(y))\n        .selectAll(\"text\")\n        .attr('fill','blue')\n        \n\n        //Bars\n        svg.selectAll(\"myRect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", x(0) )\n        .attr(\"y\", function(d) { return y(d.country); })\n        .attr(\"width\", function(d) { return x(d.expectancy); })\n        .attr(\"height\", y.bandwidth() )\n        // .attr(\"fill\", \"#69b3a2\")\n        .attr(\"fill\",\"coral\")\n\n\n      \n    }\n\n    \n\n    useEffect(()=>{\n        console.log(\"here\")\n        clearBoard();\n        let data = []\n        for(var i=0;i<csvdata.country.length;i++){\n            let obj = {};\n            obj.country = csvdata.country[i];\n            obj.expectancy = csvdata.expectancy[i];\n            data.push(obj);\n        }\n        horizontal(data);\n        // draw(data);\n        \n    },[csvdata])\n    \n    return (\n        <div ref={wrapperRef}>\n          <svg ref={svgRef} style={{width:\"500px\",height:\"400px\"}}>\n          </svg>\n        </div>\n      );\n}"]},"metadata":{},"sourceType":"module"}