{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/ScatterPlot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScatterPlot = props => {\n  _s();\n\n  let scatterRef = useRef(null);\n  const [state, setState] = useState();\n  let data = props.data;\n  let width = 1000;\n  let height = 500;\n  const margin_left = 100;\n  const margin_right = 30;\n  const margin_top = 20;\n  const margin_bottom = 100;\n  const effective_width = width - margin_left - margin_right;\n  const effective_height = height - margin_top - margin_bottom;\n  let xData;\n  let yData;\n  let color;\n  const colormap = [\"red\", \"blue\", \"black\", \"green\"];\n  useEffect(() => {\n    axios.get('http://localhost:5000/mds_data').then(repos => {\n      const allRepos = repos.data;\n      let parsedResponse = JSON.parse(allRepos);\n      let tempState = {\n        'first': parsedResponse['first'],\n        'second': parsedResponse['second'],\n        'color': parsedResponse['color']\n      };\n      setState(tempState);\n      clearBoard();\n      draw();\n    });\n    clearBoard(); //draw();\n  }, [props]);\n  useEffect(() => {\n    clearBoard();\n    draw();\n  }, [state]);\n\n  const clearBoard = () => {\n    const accessToRef = d3.select(scatterRef.current);\n    accessToRef.selectAll(\"svg > *\").remove();\n  };\n\n  const draw = () => {\n    if (state != undefined) {\n      xData = state.first;\n      yData = state.second;\n    }\n\n    if (xData != undefined && yData != undefined) {\n      const accessToRef = d3.select(scatterRef.current).attr(\"height\", height).attr(\"width\", width).style(\"background-color\", \"#f5f5f5\").append(\"g\").attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n      var xAxis = d3.scaleLinear().domain([d3.min(Object.keys(xData), function (d) {\n        return 1.2 * xData[d];\n      }), d3.max(Object.keys(xData), function (d) {\n        return 1.2 * xData[d];\n      })]).range([0, effective_width]);\n      accessToRef.append(\"g\").attr(\"transform\", \"translate(0,\" + effective_height + \")\").call(d3.axisBottom(xAxis)).call(g => g.append(\"text\").style(\"font-size\", \"18px\").attr(\"x\", effective_width / 2).attr(\"y\", -margin_top + 80).attr(\"fill\", \"blue\").attr(\"text-anchor\", \"start\").text(\"Component 1\"));\n      var yAxis = d3.scaleLinear().domain([d3.min(Object.keys(yData), function (d) {\n        return 1.2 * yData[d];\n      }), d3.max(Object.keys(yData), function (d) {\n        return 1.2 * yData[d];\n      })]).range([effective_height, 0]);\n      accessToRef.append(\"g\").call(d3.axisLeft(yAxis)).call(g => g.append(\"text\").style(\"font-size\", \"18px\").attr(\"x\", -effective_height / 2 + 100).attr(\"y\", -margin_left + 20).attr(\"fill\", \"red\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").text(\"Component 2\"));\n      accessToRef.append('g').selectAll(\"dot\").data(Object.keys(xData)).enter().append(\"circle\").attr(\"cx\", function (d) {\n        return xAxis(xData[d]);\n      }).attr(\"cy\", function (d) {\n        return yAxis(yData[d]);\n      }).attr(\"r\", 3).style(\"fill\", function (d) {\n        return colormap[state.color[d]];\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }, this), state ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"MDS Data Plot using Euclidian distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: scatterRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Color Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 60\n        }, this), \"Red   -  Cluster 1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }, this), \"Blue  -  Cluster 2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 39\n        }, this), \"Black-  Cluster 3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 38\n        }, this), \"Green  -  Cluster 4\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading .... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScatterPlot, \"QDCkeTSm8cO1sLbZ1vFeulP+Twg=\");\n\n_c = ScatterPlot;\nexport default ScatterPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/ScatterPlot.js"],"names":["React","useEffect","useRef","useState","d3","axios","ScatterPlot","props","scatterRef","state","setState","data","width","height","margin_left","margin_right","margin_top","margin_bottom","effective_width","effective_height","xData","yData","color","colormap","get","then","repos","allRepos","parsedResponse","JSON","parse","tempState","clearBoard","draw","accessToRef","select","current","selectAll","remove","undefined","first","second","attr","style","append","xAxis","scaleLinear","domain","min","Object","keys","d","max","range","call","axisBottom","g","text","yAxis","axisLeft","enter"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState} from 'react';\nimport * as d3 from 'd3';\nimport '../css/ScatterPlot.css';\nimport axios from 'axios';\n\n const ScatterPlot = (props) => {\n\n    let scatterRef = useRef(null);\n    const [state, setState] = useState();\n    let data= props.data;\n    let width = 1000;\n    let height = 500;\n    const margin_left=100;\n    const margin_right=30;\n    const margin_top=20;\n    const margin_bottom=100;\n    const effective_width= width - margin_left - margin_right;\n    const effective_height= height - margin_top - margin_bottom;\n    let xData ; \n    let yData ; \n    let color ; \n    const colormap=[\"red\",\"blue\",\"black\",\"green\"];\n    useEffect(()=>{\n        axios.get('http://localhost:5000/mds_data').then((repos) => {\n            const allRepos = repos.data;\n            let parsedResponse = JSON.parse(allRepos);\n            let tempState = {'first':parsedResponse['first'],'second':parsedResponse['second'],'color':parsedResponse['color']};\n            setState(tempState);\n            clearBoard();\n            draw();\n      });\n        clearBoard();\n        //draw();\n    },[props]);\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n    },[state])\n\n    const clearBoard=()=>{\n        const accessToRef = d3.select(scatterRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw =() =>{\n        if(state!=undefined)\n        {\n             xData = state.first;\n            yData = state.second;\n        }\n        if(xData!=undefined && yData!=undefined)\n        {\n            const accessToRef = d3.select(scatterRef.current)\n                                    .attr(\"height\",height)\n                                    .attr(\"width\",width)\n                                    .style(\"background-color\",\"#f5f5f5\")\n                                    .append(\"g\")\n                                    .attr(\"transform\", \"translate(\" + margin_left + \",\" + margin_top + \")\");\n\n            var xAxis= d3.scaleLinear()\n                        .domain([d3.min(Object.keys(xData), function(d) { return 1.2*xData[d] }), d3.max(Object.keys(xData), function(d) { return 1.2*xData[d] })])\n                        .range([ 0, effective_width ]);\n            \n            accessToRef.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + effective_height + \")\")\n                    .call(d3.axisBottom(xAxis))\n                    .call(g => g.append(\"text\")\n                        .style(\"font-size\", \"18px\")\n                        .attr(\"x\", effective_width/2)\n                        .attr(\"y\", -margin_top+80)\n                        .attr(\"fill\", \"blue\")\n                        .attr(\"text-anchor\", \"start\")\n                        .text(\"Component 1\"));\n            \n            var yAxis = d3.scaleLinear()\n                    .domain([d3.min(Object.keys(yData), function(d) { return 1.2*yData[d] }), d3.max(Object.keys(yData), function(d) { return 1.2*yData[d] })])\n                    .range([ effective_height, 0]);\n\n            accessToRef.append(\"g\")\n                .call(d3.axisLeft(yAxis))\n                .call(g => g.append(\"text\")\n                    .style(\"font-size\", \"18px\")\n                    .attr(\"x\", -effective_height/2+100)\n                    .attr(\"y\", -margin_left+20)\n                    .attr(\"fill\", \"red\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .text(\"Component 2\"));\n            \n            accessToRef.append('g')\n                .selectAll(\"dot\")\n                .data(Object.keys(xData))\n                .enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", function (d) { return xAxis(xData[d])  })\n                    .attr(\"cy\", function (d) { return yAxis(yData[d]) } )\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function (d) { return colormap[state.color[d]]})   ;\n        }\n}\n    return(\n        <div>\n            <br/><br/><br/>\n            {\n              state ? <div>\n                <h3><u>MDS Data Plot using Euclidian distance</u></h3>\n                <svg ref={scatterRef}></svg>\n                <br/>\n                <div className=\"legend\"><b>Color Legend</b><br/>\n                    Red   -  Cluster 1<br/>\n                    Blue  -  Cluster 2<br/>\n                    Black-  Cluster 3<br/>\n                    Green  -  Cluster 4<br/>\n                </div>\n                <br/>\n              </div>: <div > Loading .... </div>\n            }\n        </div>\n    );\n\n};\nexport default ScatterPlot;\n\n\n"]},"metadata":{},"sourceType":"module"}