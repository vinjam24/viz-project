{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../src/components/NavBar';\nimport HomePage from '../src/components/HomePage';\nimport ScreePlot from './components/ScreePlot';\nimport BiPlot from './components/BiPlot';\nimport ScatterPlotMatrix from './components/ScatterPlotMatrix';\nimport ScatterPlot from './components/ScatterPlot';\nimport Pcp from './components/Pcp';\nimport MdsVariable from './components/MdsVariable';\nimport barchartimg from './images/barchat.png';\nimport worldmapimg from './images/worldmap.png';\nimport pcpimg from './images/pcp.png';\nimport blankimg from './images/blank.png';\nimport GeoChart from \"../src/components/GeoChart\";\nimport data from \"./GeoChart.world.geo.json\";\nimport { BarChart } from './components/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(0);\n  const [dataState, setDataState] = useState();\n  const [scree, setScreeState] = useState();\n  const [dimensionality, setDimState] = useState();\n  const [mdsPcp, setMDSPCP] = useState();\n  const [csvdata, setCsvdata] = useState();\n  const [country, setCountry] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  function changeCountry(ele) {\n    console.log(\"this is triggered\", ele);\n    setCountry(ele);\n    setRefresh(!refresh);\n  }\n\n  let numerical;\n  let categorical;\n\n  const selectChart = chartN => {\n    setState(chartN);\n  };\n\n  const updatePCP = arr => {\n    setMDSPCP(arr);\n  };\n\n  const selDimNumber = n => {\n    setDimState(n);\n  };\n\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:8000/data\"\n    }).then(repos => {\n      const allRepos = repos.data;\n      console.log(\"OG\", allRepos);\n      setCsvdata(allRepos); // setScreeState(allRepos);\n    });\n  }, [state, country]);\n  return (\n    /*#__PURE__*/\n    // <div style={{width:\"100em\",height:\"100em\",\"backgroundColor\":\"beige\"}}>\n    _jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"60em\",\n        backgroundColor: \"beige\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" LIFE EXPECTANCY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box2\",\n        children: csvdata && /*#__PURE__*/_jsxDEV(GeoChart, {\n          data: data,\n          csvdata: csvdata,\n          country: country,\n          changeCountry: changeCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box1\",\n        children: csvdata && /*#__PURE__*/_jsxDEV(BarChart, {\n          csvdata: csvdata,\n          country: country,\n          changeCountry: changeCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pcp, {\n          country: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(App, \"zm6hf1ULebyksMV5D6bz23zAAOA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/App.js"],"names":["useState","useEffect","axios","NavBar","HomePage","ScreePlot","BiPlot","ScatterPlotMatrix","ScatterPlot","Pcp","MdsVariable","barchartimg","worldmapimg","pcpimg","blankimg","GeoChart","data","BarChart","App","state","setState","dataState","setDataState","scree","setScreeState","dimensionality","setDimState","mdsPcp","setMDSPCP","csvdata","setCsvdata","country","setCountry","refresh","setRefresh","changeCountry","ele","console","log","numerical","categorical","selectChart","chartN","updatePCP","arr","selDimNumber","n","method","url","then","repos","allRepos","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport NavBar from '../src/components/NavBar';\nimport HomePage from '../src/components/HomePage';\nimport ScreePlot from './components/ScreePlot';\nimport BiPlot from './components/BiPlot';\nimport ScatterPlotMatrix from './components/ScatterPlotMatrix';\nimport ScatterPlot from './components/ScatterPlot';\nimport Pcp from './components/Pcp';\nimport MdsVariable from './components/MdsVariable';\nimport barchartimg from './images/barchat.png';\nimport worldmapimg from './images/worldmap.png'\nimport pcpimg from './images/pcp.png'\nimport blankimg from './images/blank.png'\n\nimport GeoChart from \"../src/components/GeoChart\";\nimport data from \"./GeoChart.world.geo.json\";\nimport { BarChart } from './components/BarChart';\n\nfunction App() {\n\n  const [state, setState] = useState(0);\n  const [dataState, setDataState] = useState();\n  const [scree, setScreeState] = useState();\n  const [dimensionality, setDimState] = useState();\n  const [mdsPcp, setMDSPCP] = useState();\n  \n  const [csvdata,setCsvdata] = useState();\n  const [country,setCountry] = useState(null);\n  const [refresh,setRefresh] = useState(false);\n\n  function changeCountry(ele){\n    console.log(\"this is triggered\",ele);\n    setCountry(ele);\n    setRefresh(!refresh);\n  }\n  \n\n\n\n  let numerical;\n  let categorical;\n\n  const selectChart=(chartN)=>{\n    setState(chartN);\n  };\n\n  const updatePCP=(arr)=>{\n    setMDSPCP(arr);\n  };\n\n  const selDimNumber=(n)=>{\n    setDimState(n);\n  };\n\n  useEffect(()=>{\n\n    axios({\n      method: \"GET\",\n      url:\"http://localhost:8000/data\"\n    }).then((repos) => {\n      const allRepos = repos.data;\n      console.log(\"OG\",allRepos)\n      setCsvdata(allRepos);\n      // setScreeState(allRepos);\n    });\n\n  },[state,country]);\n \n\n  return (\n    // <div style={{width:\"100em\",height:\"100em\",\"backgroundColor\":\"beige\"}}>\n      <div style={{width:\"100%\",height:\"60em\",backgroundColor:\"beige\"}}>\n        <div className=\"header\"> <center><b> LIFE EXPECTANCY</b></center></div>\n        \n        <div className=\"box2\">\n          { csvdata && <GeoChart data={data} csvdata={csvdata} country={country} changeCountry={changeCountry} />}\n\n        </div>\n        <div className=\"box1\">\n          {csvdata && <BarChart csvdata={csvdata} country={country} changeCountry={changeCountry}/>}\n        </div>\n        <div>\n          <Pcp country={country} />\n        </div>\n        \n         \n          \n        \n        \n     \n       \n      {/* <br/>\n      <br/>\n      \n      <div class=\"wrapper\">\n        <div className=\"box1\" style={{backgroundColor:\"red\"}}>\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={barchartimg} />\n        </div>\n        <div className=\"box2\">\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={worldmapimg} />\n        </div>\n        <div className=\"box1\">\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={blankimg} />\n        </div>\n      </div>\n      <br/>\n      <br/>\n      <div class=\"wrapper\">\n        <div className=\"box1\" style={{backgroundColor:\"red\"}}>\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={blankimg} />\n        </div>\n        <div className=\"box2\">\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={pcpimg} />\n        </div>\n        <div className=\"box1\">\n          <img style={{maxWidth:\"100%\",height:\"400px\"}} src={blankimg} />\n        </div>\n      </div> */}\n      \n      {/* <div className=\"pcp_chart_img\">\n        <img style={{width:\"100px\"}} src={pcpimg} />\n      </div>\n      <div className=\"blank_chart_img\">\n        <img style={{width:\"30%\"}} src={blankimg} />\n      </div> */}\n        {/* <div className=\"header\"> <center><b> New York Housing Units by Building</b></center></div>\n          <center>\n            <NavBar changeChart={selectChart}/>\n          </center>\n          <div className=\"home\">\n            {state===0 ? <HomePage numeric={numerical} categoric={categorical} /> :<div/>}\n          </div>\n          <center>\n            {state===1 ? <ScreePlot changeDim={selDimNumber} />  : <div/>}\n            {state===2 ? <BiPlot/> : <div/>}\n            {state===3 ? <ScatterPlotMatrix dimensionality={dimensionality}/> : <div/>}\n            {state===4 ? <ScatterPlot /> : <div/>}\n            {state===5 ? <MdsVariable updateStatePCP={updatePCP}/> : <div/>}\n            {state===6 ? <Pcp /> : <div/>}\n          </center> */}\n          {/* <WorldMap /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}