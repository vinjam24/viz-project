{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/WorldMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorldMap = () => {\n  _s();\n\n  const svgRef = useRef(); // const width = 1000;\n  // const height = 700;\n  // const projection = d3.geoMercator()\n  //     .translate([width / 2, window.innerHeight / 1.4])    // translate to center of screen\n  //     .scale([150]);\n  // const path = d3.geoPath().projection(projection);\n  // let zoom = d3.zoom()\n  //     .scaleExtent([1, 10])\n  //     .translateExtent([[-500,-300], [1500, 1000]])\n  //     .on('zoom', () => {\n  //         svg.attr('transform', d3.event.transform)\n  //     });\n  // const container = d3.select(\".home\");\n  // const svg = container.append(\"svg\");\n  // // const tooltip = d3.tip().attr('class', 'tooltip')\n  // //     .html(function (d) {\n  // //         return `<div>\n  // //                     <p>Country: ${d.entity}</p>\n  // //                     <p>Life expectancy: ${d.lifeExpectancy}</p>\n  // //                 </div>`;\n  // //     });\n  // svg.attr(\"width\", width)\n  //     .attr(\"height\", height)\n  //     .style(\"background\", 'ivory')\n  //     .append('g');\n  //     // .call(tooltip);\n  // container.call(zoom);\n  // const render = (path, data, scale) => svg.selectAll()\n  //     .data(data)\n  //     .enter()\n  //     .append('path')\n  //     .attr('d', path)\n  //     .attr('class', 'country')\n  //     .style('fill', function (d) {\n  //         return scale(d.lifeExpectancy);\n  //     }).on('mouseover', function (d) {\n  //         d3.select(this)\n  //             .style('fill', tinycolor(scale(d.lifeExpectancy)).darken(10).toString());\n  //         tooltip.show(d, this)\n  //     })\n  //     .on('mouseout', function (d) {\n  //         d3.select(this)\n  //             .style('fill', scale(d.lifeExpectancy));\n  //         tooltip.hide()\n  //     }).on('mousedown', function (d) {\n  //         console.log(d.year, d.lifeExpectancy);\n  //     });\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current); // Define the projection\n\n    const projection = d3.geoMercator().scale(130).translate([500, 450]); // Define the path generator\n\n    const path = d3.geoPath().projection(projection); // Load the world map data\n\n    d3.json('https://raw.githubusercontent.com/Bradleykingz/working-with-d3/master/files/world.geo.json', (error, data) => {\n      if (error) throw error; // Draw the countries\n\n      svg.selectAll('path').data(data.features).enter().append('path').attr('d', path).attr('fill', '#FF7F50').attr('stroke', 'white').attr('stroke-width', 0.5);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: \"100em\",\n    height: \"100em\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorldMap, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = WorldMap;\nexport default WorldMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/WorldMap.js"],"names":["React","useEffect","useRef","d3","axios","WorldMap","svgRef","svg","select","current","projection","geoMercator","scale","translate","path","geoPath","json","error","data","selectAll","features","enter","append","attr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGJ,MAAM,EAArB,CADqB,CAGnB;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGFD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,GAAG,GAAGJ,EAAE,CAACK,MAAH,CAAUF,MAAM,CAACG,OAAjB,CAAZ,CADc,CAGd;;AACA,UAAMC,UAAU,GAAGP,EAAE,CAACQ,WAAH,GAChBC,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAC,GAAD,EAAM,GAAN,CAFM,CAAnB,CAJc,CAQd;;AACA,UAAMC,IAAI,GAAGX,EAAE,CAACY,OAAH,GAAaL,UAAb,CAAwBA,UAAxB,CAAb,CATc,CAWd;;AACAP,IAAAA,EAAE,CAACa,IAAH,CAAQ,4FAAR,EAAsG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACrH,UAAID,KAAJ,EAAW,MAAMA,KAAN,CAD0G,CAGrH;;AACAV,MAAAA,GAAG,CAACY,SAAJ,CAAc,MAAd,EACGD,IADH,CACQA,IAAI,CAACE,QADb,EAEGC,KAFH,GAGGC,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,GAJR,EAIaT,IAJb,EAKGS,IALH,CAKQ,MALR,EAKgB,SALhB,EAMGA,IANH,CAMQ,QANR,EAMkB,OANlB,EAOGA,IAPH,CAOQ,cAPR,EAOwB,GAPxB;AAQD,KAZD;AAeD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE;AAAK,IAAA,GAAG,EAAEjB,MAAV;AAAkB,IAAA,KAAK,EAAC,OAAxB;AAAgC,IAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5FD;;GAAMD,Q;;KAAAA,Q;AA8FN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst WorldMap = () => {\n  const svgRef = useRef();\n\n    // const width = 1000;\n    // const height = 700;\n\n    // const projection = d3.geoMercator()\n    //     .translate([width / 2, window.innerHeight / 1.4])    // translate to center of screen\n    //     .scale([150]);\n\n    // const path = d3.geoPath().projection(projection);\n\n    // let zoom = d3.zoom()\n    //     .scaleExtent([1, 10])\n    //     .translateExtent([[-500,-300], [1500, 1000]])\n    //     .on('zoom', () => {\n    //         svg.attr('transform', d3.event.transform)\n    //     });\n\n    // const container = d3.select(\".home\");\n    // const svg = container.append(\"svg\");\n\n    // // const tooltip = d3.tip().attr('class', 'tooltip')\n    // //     .html(function (d) {\n    // //         return `<div>\n    // //                     <p>Country: ${d.entity}</p>\n    // //                     <p>Life expectancy: ${d.lifeExpectancy}</p>\n    // //                 </div>`;\n    // //     });\n\n    // svg.attr(\"width\", width)\n    //     .attr(\"height\", height)\n    //     .style(\"background\", 'ivory')\n    //     .append('g');\n    //     // .call(tooltip);\n\n    // container.call(zoom);\n\n    // const render = (path, data, scale) => svg.selectAll()\n    //     .data(data)\n    //     .enter()\n    //     .append('path')\n    //     .attr('d', path)\n    //     .attr('class', 'country')\n    //     .style('fill', function (d) {\n    //         return scale(d.lifeExpectancy);\n    //     }).on('mouseover', function (d) {\n    //         d3.select(this)\n    //             .style('fill', tinycolor(scale(d.lifeExpectancy)).darken(10).toString());\n    //         tooltip.show(d, this)\n    //     })\n    //     .on('mouseout', function (d) {\n    //         d3.select(this)\n    //             .style('fill', scale(d.lifeExpectancy));\n    //         tooltip.hide()\n    //     }).on('mousedown', function (d) {\n    //         console.log(d.year, d.lifeExpectancy);\n    //     });\n\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // Define the projection\n    const projection = d3.geoMercator()\n      .scale(130)\n      .translate([500, 450]);\n\n    // Define the path generator\n    const path = d3.geoPath().projection(projection);\n\n    // Load the world map data\n    d3.json('https://raw.githubusercontent.com/Bradleykingz/working-with-d3/master/files/world.geo.json', (error, data) => {\n      if (error) throw error;\n\n      // Draw the countries\n      svg.selectAll('path')\n        .data(data.features)\n        .enter()\n        .append('path')\n        .attr('d', path)\n        .attr('fill', '#FF7F50')\n        .attr('stroke', 'white')\n        .attr('stroke-width', 0.5);\n    });\n\n    \n  }, []);\n\n  return (\n    <svg ref={svgRef} width=\"100em\" height=\"100em\"></svg>\n  );\n};\n\nexport default WorldMap;"]},"metadata":{},"sourceType":"module"}