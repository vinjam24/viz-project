{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BarChart({\n  csvdata\n}) {\n  _s();\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n\n  const clearBoard = () => {\n    const accessToRef = select(svgRef.current);\n    accessToRef.selectAll(\"svg > *\").remove();\n  };\n\n  const draw = () => {\n    // D3 code here\n    const svg = d3.select(svgRef.current); // Define the chart dimensions\n\n    const width = 500;\n    const height = 300; // Create the scales for x and y axes\n\n    const xScale = d3.scaleBand().domain(csvdata.map(d => d.country)).range([0, width]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(csvdata, d => d.expectancy)]).range([height, 0]); // Create the x and y axes\n\n    const xAxis = d3.axisBottom().scale(xScale);\n    const yAxis = d3.axisLeft().scale(yScale); // Draw the x and y axes\n\n    svg.select('.x-axis').attr('transform', `translate(0, ${height})`).call(xAxis);\n    svg.select('.y-axis').call(yAxis); // Draw the bars\n\n    svg.selectAll('.bar').data(csvdata).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.country)).attr('y', d => yScale(d.expectancy)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(d.expectancy)).attr('fill', 'steelblue');\n  };\n\n  useEffect(() => {\n    clearBoard();\n    draw();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BarChart, \"wHGsJvYloKVvWo8EGgYwue3juQs=\");\n\n_c = BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/deepika/Documents/Visualization_D3_React_JS/Lab2/frontend/visualization/src/components/BarChart.js"],"names":["React","useEffect","useRef","d3","BarChart","csvdata","svgRef","wrapperRef","clearBoard","accessToRef","select","current","selectAll","remove","draw","svg","width","height","xScale","scaleBand","domain","map","d","country","range","padding","yScale","scaleLinear","max","expectancy","xAxis","axisBottom","scale","yAxis","axisLeft","attr","call","data","enter","append","bandwidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from \"d3\";\n\nexport function BarChart({csvdata}){\n\n    const svgRef = useRef();\n    const wrapperRef = useRef();\n\n    const clearBoard=()=>{\n        const accessToRef = select(svgRef.current)\n        accessToRef.selectAll(\"svg > *\").remove();\n    }\n\n    const draw = ()=>{\n        // D3 code here\n        const svg = d3.select(svgRef.current);\n\n        // Define the chart dimensions\n        const width = 500;\n        const height = 300;\n\n        // Create the scales for x and y axes\n        const xScale = d3\n        .scaleBand()\n        .domain(csvdata.map((d) => d.country))\n        .range([0, width])\n        .padding(0.2);\n\n        const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(csvdata, (d) => d.expectancy)])\n        .range([height, 0]);\n\n        // Create the x and y axes\n        const xAxis = d3.axisBottom().scale(xScale);\n        const yAxis = d3.axisLeft().scale(yScale);\n\n        // Draw the x and y axes\n        svg\n        .select('.x-axis')\n        .attr('transform', `translate(0, ${height})`)\n        .call(xAxis);\n\n        svg.select('.y-axis').call(yAxis);\n\n        // Draw the bars\n        svg\n        .selectAll('.bar')\n        .data(csvdata)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', (d) => xScale(d.country))\n        .attr('y', (d) => yScale(d.expectancy))\n        .attr('width', xScale.bandwidth())\n        .attr('height', (d) => height - yScale(d.expectancy))\n        .attr('fill', 'steelblue');\n    }\n\n    useEffect(()=>{\n        clearBoard();\n        draw();\n        \n    })\n    \n    return (\n        <div ref={wrapperRef}>\n          <svg ref={svgRef}>\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      );\n}"]},"metadata":{},"sourceType":"module"}